# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

stages:
  - build
  - notify

docker-build:
  stage: build
  rules:
       # Run this job in a branch where a Dockerfile exists
 #   - if: $CI_COMMIT_BRANCH   
 #     exists:
 #       - Dockerfile
    # Only run if a tag was provided
    #- if: $CI_COMMIT_TAG != null

  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $PRJX_REG_USER -p $PRJX_REG_PASS $PRJX_REG/
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
      echo "Registry is $PRJX_REG"      
      echo "Project is $CI_PROJECT_NAME"
      echo "Tags $CI_COMMIT_REF_NAME and $CI_COMMIT_TAG"
      echo "Project is $tag"
      echo "Full call is $PRJX_REG/$CI_PROJECT_NAME${tag}"
    - docker build --pull -t "$PRJX_REG/$CI_PROJECT_NAME${tag}" .
    - docker push "$PRJX_REG/$CI_PROJECT_NAME${tag}"
  ## CI_COMMIT_TAG

notify_failure:
  stage: notify
  when: on_failure
  image: alpine:latest
  script:
    - 'apk --no-cache add curl'
    - 'curl -X POST -d "body=Build failure - $PRJX_REG/$CI_PROJECT_NAME${tag}" http://syn-01.prjx.uk:8009/notify/alert-net'

notify_success:
  stage: notify
  when: on_success
  needs: [docker-build]
  image: alpine:latest
  script:
    - 'apk --no-cache add curl'
    - 'curl -X POST -d "body=Build success  - $PRJX_REG/$CI_PROJECT_NAME${tag}" http://syn-01.prjx.uk:8009/notify/alert-net'



